version: "3.2"

services:
  traefik:
    image: traefik:v2.0
    command:
    - "--api.insecure=true"
    - "--providers.docker=true"
    - "--providers.docker.exposedbydefault=false"
    - "--entrypoints.web.address=:80"
    - "--providers.docker.network=traefik_public"
    #- "--providers.docker.endpoint=tcp://127.0.0.1:2377"
    - "--providers.docker.swarmMode=true"
    - "--providers.docker.watch=true"
    - "--log.level=INFO"
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
   #   - target: 443
     #   published: 443
       # protocol: tcp
        #mode: host
      - target: 8080
        published: 8080
        protocol: tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      #- /var/data/traefikv1:/etc/traefik
      #- /var/data/traefikv1/traefik.log:/traefik.log
      #- /var/data/traefikv1/acme.json:/acme.json
    networks:
      - traefik_public
    # Global mode makes an instance of traefik listen on _every_ node, so that regardless of which
    # node the request arrives on, it'll be forwarded to the correct backend service.
    deploy:
      labels:
        - "traefik.enable=false"
      mode: global
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

networks:
  traefik_public:
    external: true
